server:
  port: 7002
  ssl:
    enabled: false
  compression:
    enabled: true

redis:
  connection: ${services.redis.baseUrl:redis://localhost:6379}
  scheduler: default
  parallelism: -1

services:
  front50:
    baseUrl: http://localhost:8080

management.health.elasticsearch.enabled: false

swagger:
  enabled: true
  title: clouddriver
  description: Cloud read and write operations
  contact: admin@host.net
  patterns:
    - .*elasticIps.*
    - .*cache.*
    - .*instance.*
    - .*search.*
    - .*security.*
    - .*vpcs.*
    - .*credentials.*
    - .*networks.*
    - .*subnets.*
    - .*ops.*
    - .*task.*
    - .*applications.*
    - .*aws.*
    - .*azure.*
    - .*appengine.*
    - .*gce.*
    - .*kubernetes.*
    - .*instances.*
    - .*reports.*
    - .*docker.*
    - .*job.*
    - .*process.*
    - .*dcos.*

default:
  # legacyServerPort is a non-ssl listener, if ssl is enabled. -1 to disable
  legacyServerPort: -1
  account:
    env: default

aws:
  enabled: true
  defaultAssumeRole: role/SpinnakerManagedRole
  defaultRegions:
    - name: us-east-1
  accounts:
    - name: managing
      accountId: "961474408092"
      regions:
        - name: us-east-1
    - name: managed
      accountId: "961474408092"
      regions:
        - name: us-east-1

azure:
  enabled: false

appengine:
  enabled: false

google:
  enabled: false

kubernetes:
  enabled: false

dockerRegistry:
  enabled: false

dcos:
  enabled: false

cf:
  enabled: false

oracle:
  enabled: false

spring:
  jackson:
    mapper:
      SORT_PROPERTIES_ALPHABETICALLY: true
    serialization:
      ORDER_MAP_ENTRIES_BY_KEYS: true

operations.security:
  onMissingSecuredCheck: WARN
  onMissingValidator: WARN

# Turn on when confirming Fiat authorization checks
# logging.level.com.netflix.spinnaker.clouddriver.listeners: DEBUG

resilience4j.retry:
  instances:
    sqlTransaction:
      maxRetryAttempts: 5
      waitDuration: 100ms
      enableExponentialBackoff: false
      ignoreExceptions:
      - com.netflix.spinnaker.clouddriver.event.exceptions.AggregateChangeRejectedException
    sqlRead:
      maxRetryAttempts: 5
      waitDuration: 100ms
      enableExponentialBackoff: false

---

spring:
  profiles: prod

# example https configuration for client auth to services:
#default:
  # legacyServerPort is a non-ssl listener when the main listener has SSL enabled
  #legacyServerPort: 8501

#server:
  #ssl:
    # enabled: true
    # keyStore: clouddriver-keystore.p12
    # keyStoreType: PKCS12
    # keyStorePassword: changeme
    # trustStore: services-truststore.p12
    # trustStoreType: PKCS12
    # trustStorePassword: changeme
    # clientAuth: need

#aws:
  # example configuration for managing multiple accounts
  # role in managed account to assume:
  #defaultAssumeRole: role/myrole
  #accounts:
    # - name: account-display-name
    #   defaultKeyPair: key-pair
    #   edda: http://edda.{{region}}.host.net:7001
    #   discovery: "http://{{region}}.discovery.host.net:7001/eureka"
    #   accountId: 123456789012
    #   regions: #override default regions
    #     - name: us-east-1
    #     - name: ap-northeast-1
    #   externalId: a1b2c3d4

---

# local profile is activated by default when running the application - override values here for local development
#  for production, set spring.profiles.active to select the appropriate profile for your environment
spring:
  profiles: local

# an AWSCredentialsProvider that obtains session credentials via SSH through a bastion instance (useful for local development):
#bastion:
#  enabled: false
#  port: 22
#  proxyRegion: us-west-1
#  proxyCluster: my-credentials-cluster

---
# This profile is used in HA deployments for a clouddriver that handles read-only requests from
# other services
spring:
  profiles: ro

redis:
  connection: ${services.redisRo.baseUrl:${services.redis.baseUrl}}

caching:
  writeEnabled: false

---
# This profile is used in HA deployments for a clouddriver that handles mutating requests from
# other services, but does not run caching agents
spring:
  profiles: rw

caching:
  writeEnabled: false
